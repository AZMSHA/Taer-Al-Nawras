@mixin createFlex($direction:row,$justify:center,$align:center,){
    display: flex;
    justify-content: $justify;
    align-items: $align;
    flex-direction: $direction;
}

.bg-wrapper {
    @include createFlex;
}

.main-sec1 {
    position: relative;
    display: grid;
    grid-template-columns: 1fr auto;
    justify-content:end;
    align-items: center;
    grid-auto-flow: column;
    width: 100%;
    max-width: 1920px;
    min-height: 56rem;

    header {
        @include createFlex(column);
        padding-left: 10rem;

        .balls {
            transform: translate(-15rem,0rem);
            z-index: 0;
            position: absolute;
            @include createFlex;
        }

        .circleB {
            width: 31rem;
            z-index: 1;
        }
        .center {
            z-index: 0;
            position: absolute;
            animation: orbit 6s linear 0s infinite forwards;
            .circleS{
                width: 9.6rem;
                animation: spin 30s linear 0s infinite alternate
            }
        }

        @keyframes spin {
            from {
                transform: translate(110%,-90%) rotateZ(0deg);
            }
            to {
                transform: translate(110%,-90%) rotateZ(360deg);
            }
        }

        @keyframes orbit {
            from {
                transform: rotateZ(0deg)
            }
            to {
                transform: rotateZ(360deg)
            }
        }

        h6 {
            z-index: 2;
            margin: 0;
            line-height: 9rem;

            %letterRules {
                color: var(--colorTer);
                font-family: var(--fontSec);
                font-weight: 500;
                font-size: 10rem;
                opacity: 0;
            }

            .sentence1 {
                display: flex;
                @for $i from 0 through 10 {
                    .letter#{$i}{
                        @extend %letterRules;
                        @if $i < 10{
                            color: var(--colorPri);

                        } @else if $i == 10{
                            padding-left:1rem;
                        }
                        animation: Swim 0.6s ease-in calc(0s + (90ms * $i)) forwards;
                    }
                }
            }

            .sentence2 {
                display: flex;
                padding-left: 0.25rem;
                @for $i from 0 through 12 {
                    .letter#{$i}{
                    @extend %letterRules;
                    animation: Swim 0.6s ease-out calc(0.9s + (90ms * $i)) forwards;
                    }
                }
            }

            @keyframes Swim {
                from {
                    opacity: 0;
                    transform: translate(0px,4rem) rotateX(90deg) skewX(-15deg);
                }

                60% {
                    opacity: 0.4;
                }

                85% {
                    transform: translate(0px,-0.2rem) rotateX(5deg) skewX(0deg)
                }

                to {
                    opacity: 1;
                    transform: translate(0px,0px) rotateX(0deg) skewX(0deg);
                }
            }
        }

        p {
            opacity: 0;
            max-width: 30rem;
            animation: Swim 0.6s ease-out 2s forwards;
        }
    }

    .imageStrip {
        z-index: 5;
        display: grid;
        grid-template-rows: repeat(3, auto);
        grid-auto-columns: 14rem;
        grid-auto-flow: column;
        row-gap: 0.5rem;
        column-gap: 0.5rem;
        padding: 0.5rem;
        overflow: hidden;

        img {
            filter: grayscale(1);
            width: 100%;
            border-radius: 0.5rem;
            transition: filter 0.25s;
            animation: slide 0.7s ease-out;
            animation-fill-mode: forwards;
            animation-play-state:running;
            transform: translate(0rem,30rem);
            opacity: 0;
            box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0);
        }

        @for $index from 1 through 3 {
            :nth-child(#{$index}) {
            animation-delay: calc(70ms * $index);
            }
        }

        @keyframes slide {
            to {
                box-shadow: -1px 1px 6px 0px black;
                opacity: 1;
                transform: translate(0rem,0rem);
            }
        }

        img:hover {
            filter: grayscale(0);
        }
    }

    @media screen and (max-width: 1280px) {

        header {
            %letterRules {
                font-size: 6rem;
            }

            h6 {
                line-height: 6rem
            }

            .balls {
                transform: translate(-1rem,0rem);

                .circleB {
                    width: 35rem;
                }

                .circleS {
                    width: 6rem;
                }
            }

            @keyframes spin {
                from {
                    transform: translate(250%,-90%) rotateZ(0deg);
                }
                to {
                    transform: translate(250%,-90%) rotateZ(360deg);
                }
            }
        }
    }

    @media screen and (max-width: 912px) {
        header {
            padding-left: 1.5rem;
        }
        .imageStrip {
            display: none;
        }
    }
}